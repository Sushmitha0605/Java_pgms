1.class MyThread implements Runnable{
    String name;
    Thread t;
    MyThread(String threadname){
        name = threadname;
        t = new Thread(this, "Demo Thread");
        System.out.println("Child Thread: " +t);
        t.start();
    }
    public void run(){
        try{
            for(int i = 5; i > 0; i--){
                System.out.println("Child Thread: " +i);
                Thread.sleep(500);
            }
        }
        catch(InterruptedException e){
            System.out.println("Child Interrupted.");
        }
        System.out.println("Exiting Child Thread.");
    }
} 
class MultiThreadDemo{
    public static void main(String[] args){
        new MyThread("One");
        new MyThread("Two");
        new MyThread("Three");
        try{
                Thread.sleep(10000);
        }
        catch(InterruptedException e){
            System.out.println("Main Thread Interrupted.");
        }
        System.out.println("Exiting Main Thread.");
    }
}


    2.class MyThread extends Thread{
    String name;
    Thread t;
    MyThread(String threadname){
        name = threadname;
        t = new Thread(this, "Demo Thread");
        System.out.println("Child Thread: " +t);
        start();
    }
    public void run(){
        try{
            for(int i = 5; i > 0; i--){
                System.out.println("Child Thread: " +i);
                Thread.sleep(500);
            }
        }
        catch(InterruptedException e){
            System.out.println("Child Interrupted.");
        }
        System.out.println("Exiting Child Thread.");
    }
} 
class AliveAndJoinDemo{
    public static void main(String[] args){
        MyThread ob1 = new MyThread("ONE");
        MyThread ob2 = new MyThread("TWO");
        MyThread ob3 = new MyThread("THREE");
        
        System.out.println("Thread one is alive: " +ob1.isAlive());
        System.out.println("Thread two is alive: " +ob2.isAlive());
        System.out.println("Thread three is alive: " +ob3.isAlive());
        
        try{
            System.out.println("Waiting for threads to finish.");
            ob1.join();
            ob2.join();
            ob3.join();
        }
        catch(InterruptedException e){
            System.out.println("Main Thread Interrupted.");
        }
    } 
}
